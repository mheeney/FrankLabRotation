Commandline prompts for the RNAseq pipeline: trimming → mapping → feature count

# fq_mapping_SE.sh
# then change all the path to the right name (to /data/shared/Michelle_Heeney), also change 16 to 8, because that’s the requested thread number and since this machine only has 8, the max we can ask for is 8. after all of that, save the fq_mapping_SE.sh file, and do
# chmod 755 fq_mapping_SE.sh
# so this file become executable. then run it like this
# ./fq_mapping_SE.sh /data/shared/Michelle_Heeney/


#!/bin/bash

#set the working directory
setwd("")
getwd()


Example <- read.delim("Seq.fa")
head(Example)

system(
    "dir=$1
    cd $dir
    file=`ls *.gz | sed 's/_R1_001.fastq.gz//g' | awk '{print $1}' | sort | uniq`

    for i in $file 
        do
        echo $i")

# trimming-- needs to be on one line
system(
    "trimmomatic SE /data/shared/Michelle_Heeney/200626_M05389_0231_000000000-J32VN_Lexgogen_RNAseq_Lib1_S1_L001_R1_001.fastq.gz /data/shared/Michelle_Heeney/TEST.fq.gz ILLUMINACLIP:/data/shared/Michelle_Heeney/TruSeq3-PE_Yi.fa:2:30:10 LEADING:3 TRAILING:3 SLIDINGWINDOW:4:15 MINLEN:36 -threads 8"
)

# trimming 
system(
    "trimmomatic SE \
        $dir/${i}_R1_001.fastq.gz \
        $dir/${i}_trimmed.fq.gz \       
        #ILLUMINACLIP: TruSeq.fa:2:30:10 \  #Only if custom lib
        LEADING: 3  \
        TRAILING: 3 \
        SLIDINGWINDOW:4:15 \
        MINLEN: 36 \
        -threads 8 && >> ${dir}/${i}.trim.log"
)
    # rm $dir/${i}_1.fastq    -- you don't need to keep it and you don't want to accumulate too many large files
    # rm $dir/${i}_2.fastq

#ILLUMINACLIP: Cut adapter and other illumina-specific sequences from the read
#LEADING: Cut bases off the start of a read, if below a threshold quality TRAILING: "" end of read. As long as a base has a value below this threshold (quality 3) the base is removed and the next base will be investigated
#SLIDINGWINDOW: Performs a sliding window trimming approach. It starts scanning at the 5‟ end and clips the read once the average quality within the window falls below a threshold (average across 4 bases : average quality of 15 required)
#MINLEN: Drop the read if it is below a specified length (36 base pairs)
#Note: Quality scores come from Illumina sequencing files. Quality ranges from 0(low) to 41 (high) and is defined as Q = -10*log10(P) where P is the probability of an error.

# mapping
system( 
    "hisat2 -x /RefGenome \
        -U ${dir}/${i}_trimmed.fq.gz \
        --met-file ${dir}/${i}.err \
        --summary-file ${dir}/${i}.out \
        --no-unal \
        -p 8 | samtools view -Sb | samtools sort -o ${dir}/${i}.bam -@ 8 &&"
)

    # rm $dir/${i}_paired_1.fq.gz
    # rm $dir/${i}_unpaired_1.fq.gz
    # rm $dir/${i}_paired_2.fq.gz
    # rm $dir/${i}_unpaired_2.fq.gz

# extract feature count 
system(
    "featureCounts -T 8 --primary -C -t exon -g gene_id \
        -a /folder/file/RefGenome.gtf \
        -o ${dir}/${i}.count.txt \
        ${dir}/${i}.bam &>> ${dir}/${i}.counts.log &&"
)
    # rm ${dir}/${i}.bam

# generate read count file 
system(
"echo Extracting read count from count.txt file in ${i}
    awk '{print $1, $7}' ${dir}/${i}.count.txt | sed 1d > ${dir}/${i}.abundance &&
    
    rm ${dir}/${i}.count.txt
    done"
)

system("
cat filename.abundance | awk '$2>0' | wc -l
")

system("
wc -l filename.abundance
")
